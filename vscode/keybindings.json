[
  {
    "command": "workbench.action.toggleZenMode",
    "key": "ctrl+k ctrl+z"
  },
  {
    "command": "editor.emmet.action.wrapWithAbbreviation",
    "key": "shift+alt+="
  },
  {
    "command": "editor.emmet.action.balanceIn",
    "key": "ctrl+shift+up"
  },
  {
    "command": "editor.emmet.action.balanceOut",
    "key": "ctrl+shift+down"
  },
  {
    "command": "-npm-script.test",
    "key": "ctrl+r t",
    "when": "!terminalFocus"
  },
  {
    "command": "workbench.files.action.collapseExplorerFolders",
    "key": "ctrl+[",
    "when": "explorerViewletFocus && explorerViewletVisible"
  },
  {
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "ctrl+e",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "ctrl+shift+e",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "-workbench.view.explorer",
    "key": "ctrl+shift+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "command": "-workbench.action.newWindow",
    "key": "ctrl+shift+n"
  },
  {
    "command": "peacock.changeColorToFavorite",
    "key": "shift+alt+home"
  },
  {
    "command": "gitlens.toggleLineBlame",
    "key": "ctrl+q ctrl+e"
  },
  {
    "command": "-notebook.centerActiveCell",
    "key": "ctrl+l",
    "when": "notebookEditorFocused"
  },
  {
    "command": "workbench.action.focusActiveEditorGroup",
    "key": "ctrl+q ctrl+k"
  },
  {
    "command": "workbench.files.action.focusOpenEditorsView",
    "key": "ctrl+k e",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "command": "-workbench.files.action.focusOpenEditorsView",
    "key": "ctrl+k e",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "command": "workbench.view.explorer",
    "key": "alt+q"
  },
  {
    "command": "-saveAll",
    "key": "ctrl+k s"
  },
  {
    "command": "saveAll",
    "key": "ctrl+k s"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "alt alt",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g g",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+p"
  },
  {
    "command": "-workbench.action.showCommands",
    "key": "ctrl+shift+p"
  },
  {
    "command": "-editor.emmet.action.expandAbbreviation",
    "key": "tab",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "command": "-workbench.action.files.openFile",
    "key": "ctrl+o"
  },
  {
    "command": "-inline-parameters.toggle",
    "key": "ctrl+k a"
  },
  {
    "command": "-turboConsoleLog.deleteAllLogMessages",
    "key": "shift+alt+d"
  },
  {
    "command": "-workbench.action.reloadWindow",
    "key": "ctrl+r",
    "when": "isDevelopment"
  },
  {
    "command": "-npm-script.showOutput",
    "key": "ctrl+r l",
    "when": "!terminalFocus"
  },
  {
    "command": "-npm-script.run",
    "key": "ctrl+r shift+r",
    "when": "!terminalFocus"
  },
  {
    "command": "-yarn-script.test",
    "key": "ctrl+r t",
    "when": "!terminalFocus"
  },
  {
    "command": "-yarn-script.terminate",
    "key": "ctrl+r shift+x",
    "when": "!terminalFocus"
  },
  {
    "command": "-yarn-script.runScript",
    "key": "ctrl+r shift+r",
    "when": "!terminalFocus"
  },
  {
    "command": "-yarn-script.runScriptLast",
    "key": "ctrl+r r",
    "when": "!terminalFocus"
  },
  {
    "command": "-npm-script.terminate-script",
    "key": "ctrl+r shift+x",
    "when": "!terminalFocus"
  },
  {
    "command": "-npm-script.rerun-last-script",
    "key": "ctrl+r r",
    "when": "!terminalFocus"
  },
  {
    "command": "editorScroll",
    "key": "alt+m",
    "when": "editorFocus",
    "args": {
      "by": "line",
      "revealCursor": false,
      "to": "down",
      "value": 10
    }
  },
  {
    "command": "editorScroll",
    "key": "shift+alt+m",
    "when": "editorFocus",
    "args": {
      "by": "line",
      "revealCursor": false,
      "to": "up",
      "value": 10
    }
  },
  {
    "command": "-gitProjectManager.openProjectNewWindow",
    "key": "ctrl+alt+n"
  },
  {
    "command": "-gitlens.gitCommands",
    "key": "alt+/",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "command": "-gitlens.showQuickRepoStatus",
    "key": "alt+s",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "command": "-gitlens.toggleFileBlame",
    "key": "alt+b",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "args": {
      "by": "line",
      "revealCursor": true,
      "to": "up",
      "value": 4
    },
    "command": "editorScroll",
    "key": "ctrl+up",
    "when": "editorTextFocus"
  },
  {
    "args": {
      "by": "line",
      "revealCursor": true,
      "to": "down",
      "value": 4
    },
    "command": "editorScroll",
    "key": "ctrl+down",
    "when": "editorTextFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "alt+`"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "ctrl+b"
  },
  {
    "command": "workbench.action.terminal.kill",
    "key": "ctrl+x",
    "when": "terminalFocus"
  },
  {
    "command": "fileutils.removeFile",
    "key": "ctrl+shift+delete"
  },
  {
    "command": "fileutils.renameFile",
    "key": "ctrl+shift+r"
  },
  {
    "command": "editor.action.selectToBracket",
    "key": "ctrl+b"
  },
  {
    "command": "workbench.action.tasks.runTask",
    "key": "f1"
  },
  {
    "command": "editor.action.quickFix",
    "key": "alt+enter",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "gitlens.gitCommands",
    "key": "alt+/",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "command": "-gitlens.gitCommands",
    "key": "ctrl+shift+g /",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "command": "search.action.openNewEditor",
    "key": "ctrl+shift+f"
  },
  {
    "command": "workbench.action.terminal.new",
    "key": "ctrl+shift+n",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "f3",
    "command": "settings.cycle.colorTheme"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+alt+shift+i",
    "command": "settings.cycle.inlayHints"
  },
  {
    "key": "ctrl+alt+shift+i",
    "command": "settings.cycle.inlayHints"
  },
  {
    "key": "ctrl+enter",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
    "key": "ctrl+h",
    "command": "list.collapse",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+[",
    "command": "cursorMove",
    "when": "editorTextFocus",
    "args": { "by": "line", "select": false, "to": "viewPortTop" }
  },
  {
    "key": "alt+\\",
    "command": "cursorMove",
    "when": "editorTextFocus",
    "args": { "by": "line", "select": false, "to": "viewPortCenter" }
  },
  {
    "key": "alt+]",
    "command": "cursorMove",
    "when": "editorTextFocus",
    "args": { "by": "line", "select": false, "to": "viewPortBottom" }
  },
  {
    "key": "ctrl+l",
    "command": "list.expand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "shift+l",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.insertSnippet"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+n",
    "command": "extension.advancedNewFile"
  },
  {
    "key": "alt+g",
    "command": "workbench.scm.focus"
  },
  {
    "key": "ctrl+alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+l",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+n",
    "command": "editor.emmet.action.updateTag",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+space",
    "command": "workbench.action.acceptSelectedQuickOpenItem",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+j",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l",
    "command": "editor.action.insertLineAfter",
    "when": "textInputFocus"
  },
  {
    "key": "alt+k",
    "command": "editor.action.insertLineBefore",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+l",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertSnippet",
    "key": "alt+e"
  },
  {
    "command": "cursorEnd",
    "key": "alt+d"
  },
  {
    "command": "cursorHome",
    "key": "alt+a"
  },
  {
    "key": "ctrl+shift+c",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  },
  {
    "args": {
      "by": "line",
      "to": "down",
      "value": 3
    },
    "command": "cursorMove",
    "key": "ctrl+alt+o",
    "when": "editorTextFocus"
  },
  {
    "args": {
      "by": "line",
      "to": "up",
      "value": 3
    },
    "command": "cursorMove",
    "key": "ctrl+alt+i",
    "when": "editorTextFocus"
  },
  {
    "args": {
      "by": "line",
      "to": "up",
      "value": 5
    },
    "command": "cursorMove",
    "key": "pageup",
    "when": "editorTextFocus"
  },
  {
    "args": {
      "by": "line",
      "to": "down",
      "value": 5
    },
    "command": "cursorMove",
    "key": "pagedown",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+b",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+alt+[",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+]",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+[",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+]",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+,",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+.",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+o",
    "command": "tabout",
    "when": "editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "tab",
    "command": "-tabout",
    "when": "editorTextFocus && !editorHasMultipleSelections && !inSnippetMode && !inlineSuggestionVisible && !suggestWidgetVisible"
  },
  {
    "key": "alt+h",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+-",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "alt+=",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "alt+backspace",
    "command": "deleteWordRight",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+5",
    "command": "editor.emmet.action.matchTag"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.increaseViewHeight"
  },
  {
    "key": "ctrl+alt+shift+h",
    "command": "workbench.action.decreaseViewHeight"
  },
  {
    "key": "ctrl+alt+v",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "ctrl+alt+shift+v",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+alt+b",
    "command": "workbench.action.toggleSidebarPosition"
  },
  {
    "key": "alt+;",
    "command": "cursorUndo",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+'",
    "command": "cursorRedo",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+;",
    "command": "workbench.action.navigateBack",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+'",
    "command": "workbench.action.navigateForward",
    "when": "editorTextFocus"
  },
  { "key": "alt+f", "command": "workbench.action.terminal.focus" },
  { "key": "alt+f", "command": "workbench.action.focusActiveEditorGroup", "when": "terminalFocus" },
  {
    "key": "ctrl+shift+-",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+shift+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+shift+backspace",
    "command": "editor.action.fontZoomReset"
  },
  {
    "key": "alt+shift+b",
    "command": "cursorWordLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "alt+shift+n",
    "command": "cursorWordRightSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "alt+shift+h",
    "command": "cursorLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "alt+shift+j",
    "command": "cursorRightSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+shift+z",
    "command": "workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+shift+z",
    "command": "-redo"
  },
  {
    "key": "alt+z",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "alt+x",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "alt+i",
    "command": "editor.emmet.action.balanceIn"
  },
  {
    "key": "alt+o",
    "command": "editor.emmet.action.balanceOut"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-extension.advancedNewFile"
  },
  {
    "key": "ctrl+alt+n",
    "command": "FT.createFolderStructure"
  },
  {
    "key": "ctrl+k",
    "when": "CodeActionMenuVisible",
    "command": "focusPreviousCodeAction"
  },
  {
    "key": "ctrl+j",
    "when": "CodeActionMenuVisible",
    "command": "focusNextCodeAction"
  },
  {
    "key": "ctrl+space",
    "when": "CodeActionMenuVisible",
    "command": "onEnterSelectCodeAction"
  },
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.sourceAction",
    "args": {
      "kind": "source.addMissingImports",
      "apply": "first"
    }
  }
]
